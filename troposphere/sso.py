# Copyright (c) 2012-2022, Mark Peek <mark@peek.org>
# All rights reserved.
#
# See LICENSE file for full license.
#
# *** Do not modify - this file is autogenerated ***


from . import AWSObject, AWSProperty, PropsDictType, Tags


class Assignment(AWSObject):
    """
    `Assignment <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-assignment.html>`__
    """

    resource_type = "AWS::SSO::Assignment"

    props: PropsDictType = {
        "InstanceArn": (str, True),
        "PermissionSetArn": (str, True),
        "PrincipalId": (str, True),
        "PrincipalType": (str, True),
        "TargetId": (str, True),
        "TargetType": (str, True),
    }


class AccessControlAttributeValue(AWSProperty):
    """
    `AccessControlAttributeValue <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sso-instanceaccesscontrolattributeconfiguration-accesscontrolattributevalue.html>`__
    """

    props: PropsDictType = {
        "Source": ([str], True),
    }


class AccessControlAttribute(AWSProperty):
    """
    `AccessControlAttribute <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sso-instanceaccesscontrolattributeconfiguration-accesscontrolattribute.html>`__
    """

    props: PropsDictType = {
        "Key": (str, True),
        "Value": (AccessControlAttributeValue, True),
    }


class InstanceAccessControlAttributeConfiguration(AWSObject):
    """
    `InstanceAccessControlAttributeConfiguration <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-instanceaccesscontrolattributeconfiguration.html>`__
    """

    resource_type = "AWS::SSO::InstanceAccessControlAttributeConfiguration"

    props: PropsDictType = {
        "AccessControlAttributes": ([AccessControlAttribute], False),
        "InstanceArn": (str, True),
    }


class CustomerManagedPolicyReference(AWSProperty):
    """
    `CustomerManagedPolicyReference <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sso-permissionset-customermanagedpolicyreference.html>`__
    """

    props: PropsDictType = {
        "Name": (str, True),
        "Path": (str, False),
    }


class PermissionsBoundary(AWSProperty):
    """
    `PermissionsBoundary <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-sso-permissionset-permissionsboundary.html>`__
    """

    props: PropsDictType = {
        "CustomerManagedPolicyReference": (CustomerManagedPolicyReference, False),
        "ManagedPolicyArn": (str, False),
    }


class PermissionSet(AWSObject):
    """
    `PermissionSet <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sso-permissionset.html>`__
    """

    resource_type = "AWS::SSO::PermissionSet"

    props: PropsDictType = {
        "CustomerManagedPolicyReferences": ([CustomerManagedPolicyReference], False),
        "Description": (str, False),
        "InlinePolicy": (dict, False),
        "InstanceArn": (str, True),
        "ManagedPolicies": ([str], False),
        "Name": (str, True),
        "PermissionsBoundary": (PermissionsBoundary, False),
        "RelayStateType": (str, False),
        "SessionDuration": (str, False),
        "Tags": (Tags, False),
    }
