# Copyright (c) 2012-2022, Mark Peek <mark@peek.org>
# All rights reserved.
#
# See LICENSE file for full license.
#
# *** Do not modify - this file is autogenerated ***


from . import AWSObject, AWSProperty, PropsDictType, Tags
from .validators import boolean, integer


class Namespace(AWSObject):
    """
    `Namespace <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-namespace.html>`__
    """

    resource_type = "AWS::RedshiftServerless::Namespace"

    props: PropsDictType = {
        "AdminUserPassword": (str, False),
        "AdminUsername": (str, False),
        "DbName": (str, False),
        "DefaultIamRoleArn": (str, False),
        "FinalSnapshotName": (str, False),
        "FinalSnapshotRetentionPeriod": (integer, False),
        "IamRoles": ([str], False),
        "KmsKeyId": (str, False),
        "LogExports": ([str], False),
        "NamespaceName": (str, True),
        "Tags": (Tags, False),
    }


class ConfigParameter(AWSProperty):
    """
    `ConfigParameter <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-redshiftserverless-workgroup-configparameter.html>`__
    """

    props: PropsDictType = {
        "ParameterKey": (str, False),
        "ParameterValue": (str, False),
    }


class Workgroup(AWSObject):
    """
    `Workgroup <http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshiftserverless-workgroup.html>`__
    """

    resource_type = "AWS::RedshiftServerless::Workgroup"

    props: PropsDictType = {
        "BaseCapacity": (integer, False),
        "ConfigParameters": ([ConfigParameter], False),
        "EnhancedVpcRouting": (boolean, False),
        "NamespaceName": (str, False),
        "PubliclyAccessible": (boolean, False),
        "SecurityGroupIds": ([str], False),
        "SubnetIds": ([str], False),
        "Tags": (Tags, False),
        "WorkgroupName": (str, True),
    }
