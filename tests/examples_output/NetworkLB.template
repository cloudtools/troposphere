{
 "AWSTemplateFormatVersion": "2010-09-09",
 "Description": "AWS CloudFormation Sample Template: NLB with 1 EC2 instance",
 "Mappings": {
  "RegionMap": {
   "ap-northeast-1": {
    "AMI": "ami-9c03a89d"
   },
   "ap-southeast-1": {
    "AMI": "ami-66f28c34"
   },
   "eu-west-1": {
    "AMI": "ami-37c2f643"
   },
   "sa-east-1": {
    "AMI": "ami-a039e6bd"
   },
   "us-east-1": {
    "AMI": "ami-6411e20d"
   },
   "us-west-1": {
    "AMI": "ami-c9c7978c"
   },
   "us-west-2": {
    "AMI": "ami-fcff72cc"
   }
  }
 },
 "Outputs": {
  "URL": {
   "Description": "URL of the sample website",
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "NetworkLB",
        "DNSName"
       ]
      }
     ]
    ]
   }
  }
 },
 "Parameters": {
  "InstanceType": {
   "AllowedValues": [
    "t1.micro",
    "m1.small",
    "m1.medium",
    "m1.large",
    "m1.xlarge",
    "m2.xlarge",
    "m2.2xlarge",
    "m2.4xlarge",
    "c1.medium",
    "c1.xlarge",
    "cc1.4xlarge",
    "cc2.8xlarge",
    "cg1.4xlarge"
   ],
   "ConstraintDescription": "must be a valid EC2 instance type.",
   "Default": "m1.small",
   "Description": "WebServer EC2 instance type",
   "Type": "String"
  },
  "KeyName": {
   "Default": "mark",
   "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
   "Type": "String"
  },
  "VpcId": {
   "Default": "vpc-82c514e6",
   "Type": "String"
  },
  "WebServerPort": {
   "Default": "8888",
   "Description": "TCP/IP port of the web server",
   "Type": "String"
  },
  "subnetA": {
   "Default": "subnet-096fd06d",
   "Type": "String"
  },
  "subnetB": {
   "Default": "subnet-1313ef4b",
   "Type": "String"
  }
 },
 "Resources": {
  "InstanceSecurityGroup": {
   "Properties": {
    "GroupDescription": "Enable SSH and HTTP access on the inbound port",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "FromPort": "22",
      "IpProtocol": "tcp",
      "ToPort": "22"
     },
     {
      "CidrIp": "0.0.0.0/0",
      "FromPort": {
       "Ref": "WebServerPort"
      },
      "IpProtocol": "tcp",
      "ToPort": {
       "Ref": "WebServerPort"
      }
     }
    ]
   },
   "Type": "AWS::EC2::SecurityGroup"
  },
  "Listener": {
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "TargetGroupWeb"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "NetworkLB"
    },
    "Port": "80",
    "Protocol": "HTTP"
   },
   "Type": "AWS::ElasticLoadBalancingV2::Listener"
  },
  "NetworkLB": {
   "Properties": {
    "Name": "NetworkLB",
    "Scheme": "internet-facing",
    "SubnetMappings": [
     {
      "AllocationId": {
       "Fn::GetAtt": [
        "eipA",
        "AllocationId"
       ]
      },
      "SubnetId": {
       "Ref": "subnetA"
      }
     },
     {
      "AllocationId": {
       "Fn::GetAtt": [
        "eipB",
        "AllocationId"
       ]
      },
      "SubnetId": {
       "Ref": "subnetB"
      }
     }
    ],
    "Type": "network"
   },
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer"
  },
  "TargetGroupWeb": {
   "Properties": {
    "HealthCheckIntervalSeconds": "30",
    "HealthCheckProtocol": "HTTP",
    "HealthCheckTimeoutSeconds": "10",
    "HealthyThresholdCount": "4",
    "Matcher": {
     "HttpCode": "200"
    },
    "Name": "WebTarget",
    "Port": {
     "Ref": "WebServerPort"
    },
    "Protocol": "HTTP",
    "Targets": [
     {
      "Id": {
       "Ref": "WebInstance"
      },
      "Port": {
       "Ref": "WebServerPort"
      }
     }
    ],
    "UnhealthyThresholdCount": "3",
    "VpcId": {
     "Ref": "VpcId"
    }
   },
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup"
  },
  "WebInstance": {
   "Properties": {
    "ImageId": {
     "Fn::FindInMap": [
      "RegionMap",
      {
       "Ref": "AWS::Region"
      },
      "AMI"
     ]
    },
    "InstanceType": {
     "Ref": "InstanceType"
    },
    "KeyName": {
     "Ref": "KeyName"
    },
    "SecurityGroups": [
     {
      "Ref": "InstanceSecurityGroup"
     }
    ],
    "UserData": {
     "Fn::Base64": {
      "Ref": "WebServerPort"
     }
    }
   },
   "Type": "AWS::EC2::Instance"
  },
  "eipA": {
   "Properties": {
    "Domain": "vpc"
   },
   "Type": "AWS::EC2::EIP"
  },
  "eipB": {
   "Properties": {
    "Domain": "vpc"
   },
   "Type": "AWS::EC2::EIP"
  }
 }
}
