name: Tests


on:
  pull_request:
  push:
    branches:
      - master


defaults:
  run:
    shell: bash


jobs:
  test-python:
    name: Python Linting & Tests
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v1
        id: cache
        with:
          path: |
            .venv
            ~.cache/pip
          key: venv-${{ runner.os }}-${{ steps.setup-python.python-version }}-${{ hashFiles('**/poetry.lock') }}
      # TODO replace with https://github.com/Gr1N/setup-poetry when it support 1.2
      # https://github.com/Gr1N/setup-poetry/issues/16
      - run: |
          python -m pip install --upgrade pip wheel
          python -m pip install "poetry>=1.2.0a1" "poetry-core>=1.1.0a5" --pre
      - name: Ensure Cache Is Healthy
        if: runner.os != 'Windows' && steps.cache.outputs.cache-hit == 'true'
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv
      - run: poetry install -vv
      - name: Run Linters
        run: make lint
      - name: Run Tests
        run: make test
